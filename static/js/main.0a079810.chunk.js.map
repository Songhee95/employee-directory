{"version":3,"sources":["components/API/API.jsx","components/Table/TablePartial.jsx","components/Table/Sorting.jsx","components/Table/Table.jsx","components/Search/Validation.jsx","components/Search/Search.jsx","components/Header/Header.jsx","components/Search/Filter.jsx","components/page/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["API","axios","get","TablePartial","valueToTable","map","user","src","picture","alt","name","cell","email","dob","Sorting","sortByName","sort","a","b","nameA","toUpperCase","nameB","Table","useState","setSortByName","sortedArray","setSortedArray","useEffect","className","onClick","Validation","e","option","setName","setCellNum","str","target","value","replace","Search","setOption","cellNum","htmlFor","aria-label","onChange","defaultValue","type","id","Header","Filter","setSearch","state","isNaN","filter","man","toLowerCase","startsWith","Number","Home","setState","search","then","response","data","results","first","last","medium","date","slice","catch","err","length","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a079810.chunk.js","sourcesContent":["import axios from \"axios\";\r\n// Export an object containing methods we'll use for accessing the Wikipedia API\r\n\r\nfunction API() {\r\n    return (\r\n        axios.get(\r\n            \"https://randomuser.me/api/?nat=us&results=30\"\r\n        )\r\n    )\r\n}\r\n\r\nexport default API\r\n","import React from 'react'\r\n\r\nfunction TablePartial(valueToTable) {\r\n    return (valueToTable.map(user =>(\r\n        <tr key={user.cell}>\r\n            <td><img src={user.picture} alt=\"user\"/></td>\r\n            <td>{user.name}</td>\r\n            <td>{user.cell}</td>\r\n            <td>{user.email}</td>\r\n            <td>{user.dob}</td>\r\n        </tr>\r\n    ))\r\n    )\r\n}\r\n\r\nexport default TablePartial\r\n","function Sorting(valueToTable, sortByName) {\r\n    if(sortByName){\r\n        return (\r\n            valueToTable.sort(function(a,b){\r\n                let nameA = a.name.toUpperCase();\r\n                let nameB = b.name.toUpperCase();\r\n                if(nameA<nameB){\r\n                    return -1;\r\n                } \r\n                if(nameA>nameB){\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            })\r\n        )\r\n    }else if(!sortByName){\r\n        return(\r\n            valueToTable.sort(function(a,b){\r\n                let nameA = a.name.toUpperCase();\r\n                let nameB = b.name.toUpperCase();\r\n                if(nameA<nameB){\r\n                    return 1;\r\n                } \r\n                if(nameA>nameB){\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            })\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Sorting\r\n","import React, {useState, useEffect} from 'react'\r\nimport './Table.css';\r\nimport TablePartial from './TablePartial.jsx';\r\nimport Sorting from './Sorting.jsx'\r\n\r\nfunction Table({valueToTable}) {\r\n    const [sortByName, setSortByName] = useState(false);\r\n    const [sortedArray, setSortedArray] = useState()\r\n\r\n    const clickedSort = ()=>{\r\n        setSortByName(!sortByName);\r\n        setSortedArray(Sorting(sortedArray, sortByName));\r\n    }\r\n\r\n    useEffect(()=>{\r\n        setSortedArray(valueToTable);\r\n        // eslint-disable-next-line\r\n    }, [valueToTable])\r\n\r\n    return (\r\n        <>\r\n        <div className='table-container table'>\r\n            <table className='table-striped table-box'>\r\n                <thead className='table-primary'>\r\n                    <tr>\r\n                        <th>Picture</th>\r\n                        <th className='th-name'>Name<i className=\"fa fa-fw fa-sort\" onClick={clickedSort}></i></th>\r\n                        <th>Phone</th>\r\n                        <th>Email</th>\r\n                        <th>DOB</th>\r\n                    </tr>\r\n                </thead>\r\n            <tbody>\r\n                {sortedArray && TablePartial(sortedArray)}\r\n            </tbody>\r\n            </table>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","function Validation(e, option, setName, user, setCellNum) {\r\n    let str = e.target.value;\r\n    if(option === \"1\"){\r\n        str = str.replace(/\\d+/g, \"\")\r\n        setName(str)\r\n        user(str)\r\n    }else if(option ==='2'){\r\n        str = str.replace(/^[a-zA-Z]+$/, \"\")\r\n        setCellNum(str)\r\n        user(str)\r\n    }\r\n}\r\n\r\nexport default Validation\r\n","import React, {useState} from 'react';\r\nimport './Search.css';\r\nimport Validation from './Validation';\r\n\r\nfunction Search({user}) {\r\n    const [option, setOption] = useState(\"\");\r\n    const [cellNum, setCellNum] = useState(\"\");\r\n    const [name, setName] = useState('')\r\n\r\n\r\n    const handleInput = (e) =>{\r\n        Validation(e, option, setName, user, setCellNum)\r\n    }\r\n    const selectOption = (e) =>{\r\n        setOption(e.target.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"search-container\">\r\n            <form className=\"search-form row g-3\" >\r\n                <div className=\"col-auto input\">\r\n                    <label htmlFor=\"search\" className=\"search-box\">\r\n                        <select className=\"form-select\" aria-label=\"Default select example\" onChange={selectOption}>\r\n                            <option defaultValue>Select Search Option</option>\r\n                            <option value=\"1\">Name</option>\r\n                            <option value=\"2\">Phone</option>\r\n                        </select>\r\n                    </label>\r\n                    <input type=\"text\" className=\"form-control\" id=\"search\" name='cellNum' value={option==='1' ? name : cellNum} onChange={handleInput}/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport './Header.css'\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className='header-container bg-dark'>\r\n            <h1 className=\"title\">Employee directory</h1>\r\n            <p>Search to Filter by name or Phone Number</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","function Filter(user, setSearch, state) {\r\n    if(isNaN(user)) {\r\n        let reRender = state.filter(man => man.name.toLowerCase().startsWith(user))\r\n        return setSearch(reRender)\r\n    }else if(Number(user)){\r\n        let reRender = state.filter(man => man.cell.startsWith(\"(\"+user))\r\n        return setSearch(reRender)\r\n    }else{\r\n        return setSearch(\"\")\r\n    }\r\n}\r\n\r\nexport default Filter\r\n","import React, { useState, useEffect} from 'react';\r\nimport API from \"../API/API\"\r\nimport Table from '../Table/Table';\r\nimport Search from '../Search/Search'\r\nimport Header from '../Header/Header';\r\nimport Filter from '../Search/Filter';\r\n\r\nfunction Home() {\r\n    const [state, setState] = useState([]);\r\n    const [search , setSearch] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        API()\r\n        .then(response =>{\r\n            const data = response.data.results;\r\n            setState([...data].map(data =>{\r\n                return{\r\n                    ...state,\r\n                    name: data.name.first+\" \"+data.name.last,\r\n                    picture: data.picture.medium,\r\n                    cell: data.cell,\r\n                    email: data.email,\r\n                    dob: data.dob.date.slice(0,10)\r\n                }\r\n            }))\r\n        })\r\n        .catch(err =>{\r\n            setState(err);\r\n        })\r\n        // eslint-disable-next-line\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Search user={user => Filter(user, setSearch, state)}/>\r\n            <Table valueToTable={search.length===0 ? state : search}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import Home from \"./components/page/Home\";\n\nfunction App() {\n  return <Home />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}